<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesUsersProfilesProxy extends \Entities\UsersProfiles implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setFirstName($firstName)
    {
        $this->_load();
        return parent::setFirstName($firstName);
    }

    public function getFirstName()
    {
        $this->_load();
        return parent::getFirstName();
    }

    public function setAddress($address)
    {
        $this->_load();
        return parent::setAddress($address);
    }

    public function getAddress()
    {
        $this->_load();
        return parent::getAddress();
    }

    public function setOfficeNumber($officeNumber)
    {
        $this->_load();
        return parent::setOfficeNumber($officeNumber);
    }

    public function getOfficeNumber()
    {
        $this->_load();
        return parent::getOfficeNumber();
    }

    public function setFaxNumber($faxNumber)
    {
        $this->_load();
        return parent::setFaxNumber($faxNumber);
    }

    public function getFaxNumber()
    {
        $this->_load();
        return parent::getFaxNumber();
    }

    public function setHomeNumber($homeNumber)
    {
        $this->_load();
        return parent::setHomeNumber($homeNumber);
    }

    public function getHomeNumber()
    {
        $this->_load();
        return parent::getHomeNumber();
    }

    public function setPosition($position)
    {
        $this->_load();
        return parent::setPosition($position);
    }

    public function getPosition()
    {
        $this->_load();
        return parent::getPosition();
    }

    public function setGtak($gtak)
    {
        $this->_load();
        return parent::setGtak($gtak);
    }

    public function getGtak()
    {
        $this->_load();
        return parent::getGtak();
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setProfile(\Entities\Users $profile)
    {
        $this->_load();
        return parent::setProfile($profile);
    }

    public function getProfile()
    {
        $this->_load();
        return parent::getProfile();
    }

    public function setUser(\Entities\Users $user)
    {
        $this->_load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->_load();
        return parent::getUser();
    }

    public function setLastName($lastName)
    {
        $this->_load();
        return parent::setLastName($lastName);
    }

    public function getLastName()
    {
        $this->_load();
        return parent::getLastName();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'firstName', 'lastName', 'address', 'officeNumber', 'faxNumber', 'homeNumber', 'position', 'gtak', 'id', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}