<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesEnterprisesProxy extends \Entities\Enterprises implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setEnterpriseLabel($enterpriseLabel)
    {
        $this->_load();
        return parent::setEnterpriseLabel($enterpriseLabel);
    }

    public function getEnterpriseLabel()
    {
        $this->_load();
        return parent::getEnterpriseLabel();
    }

    public function setEnterpriseIsAga($enterpriseIsAga)
    {
        $this->_load();
        return parent::setEnterpriseIsAga($enterpriseIsAga);
    }

    public function getEnterpriseIsAga()
    {
        $this->_load();
        return parent::getEnterpriseIsAga();
    }

    public function setCreatedOn($createdOn)
    {
        $this->_load();
        return parent::setCreatedOn($createdOn);
    }

    public function getCreatedOn()
    {
        $this->_load();
        return parent::getCreatedOn();
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setProfile(\Entities\EnterprisesProfiles $profile)
    {
        $this->_load();
        return parent::setProfile($profile);
    }

    public function getProfile()
    {
        $this->_load();
        return parent::getProfile();
    }

    public function addEnterprise(\Entities\EnterprisesProfiles $enterprise)
    {
        $this->_load();
        return parent::addEnterprise($enterprise);
    }

    public function getEnterprise()
    {
        $this->_load();
        return parent::getEnterprise();
    }

    public function addEnterprisesAccountingYear(\Entities\EnterprisesAccountingYear $enterprisesAccountingYear)
    {
        $this->_load();
        return parent::addEnterprisesAccountingYear($enterprisesAccountingYear);
    }

    public function getEnterprisesAccountingYear()
    {
        $this->_load();
        return parent::getEnterprisesAccountingYear();
    }

    public function addEnterprisesBankAccount(\Entities\EnterprisesBankAccounts $enterprisesBankAccount)
    {
        $this->_load();
        return parent::addEnterprisesBankAccount($enterprisesBankAccount);
    }

    public function getEnterprisesBankAccount()
    {
        $this->_load();
        return parent::getEnterprisesBankAccount();
    }

    public function setUser(\Entities\Users $user)
    {
        $this->_load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->_load();
        return parent::getUser();
    }

    public function addEnterprisesBankStatements(\Entities\EnterprisesBankStatements $enterprisesBankStatements)
    {
        $this->_load();
        return parent::addEnterprisesBankStatements($enterprisesBankStatements);
    }

    public function getEnterprisesBankStatements()
    {
        $this->_load();
        return parent::getEnterprisesBankStatements();
    }

    public function addEnterprisesBankAccounts(\Entities\EnterprisesBankAccounts $enterprisesBankAccounts)
    {
        $this->_load();
        return parent::addEnterprisesBankAccounts($enterprisesBankAccounts);
    }

    public function getEnterprisesBankAccounts()
    {
        $this->_load();
        return parent::getEnterprisesBankAccounts();
    }

    public function addEnterprisesModules(\Entities\EnterprisesModules $enterprisesModules)
    {
        $this->_load();
        return parent::addEnterprisesModules($enterprisesModules);
    }

    public function getEnterprisesModules()
    {
        $this->_load();
        return parent::getEnterprisesModules();
    }

    public function addEnterprisesIncome(\Entities\EntreprisesIncomes $enterprisesIncome)
    {
        $this->_load();
        return parent::addEnterprisesIncome($enterprisesIncome);
    }

    public function getEnterprisesIncome()
    {
        $this->_load();
        return parent::getEnterprisesIncome();
    }

    public function addEnterpriseProfile(\Entities\EnterprisesProfiles $enterpriseProfile)
    {
        $this->_load();
        return parent::addEnterpriseProfile($enterpriseProfile);
    }

    public function getEnterpriseProfile()
    {
        $this->_load();
        return parent::getEnterpriseProfile();
    }

    public function addEnterprisePermission(\Entities\AclEnterprisesPermissions $enterprisePermission)
    {
        $this->_load();
        return parent::addEnterprisePermission($enterprisePermission);
    }

    public function getEnterprisePermission()
    {
        $this->_load();
        return parent::getEnterprisePermission();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'enterpriseLabel', 'enterpriseIsAga', 'createdOn', 'id', 'profile', 'enterprise', 'enterprise_permission', 'enterpriseProfile', 'enterprises_accounting_year', 'enterprises_bank_statements', 'enterprises_bank_accounts', 'enterprises_modules', 'enterprises_income', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}